// Copyright 2022 EngFlow Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package engflow.bazel.invocation.analyzer;

option java_multiple_files = true;
option java_outer_classname = "BazelInvocationAnalyzerProtos";
option java_package = "com.engflow.bazel.invocation.analyzer";

// A caveat providing hints, suggestions, comments, or disclaimers about the
// analysis performed.
// Next id: 3.
message Caveat {
  // Message describing the caveat.
  string message = 1;
  // Whether to suggest running the tool in verbose mode.
  bool suggest_verbose_mode = 2;
}

// An estimate of how the invocation may improve.
// Next id: 3.
message PotentialImprovement {
  // Message describing the potential improvement.
  string message = 1;
  // Potential invocation duration reduction in percent.
  double duration_reduction_percentage = 2;
}

// A suggestion on how to improve the invocation.
// Next id: 8.
message Suggestion {
  // The type of change this recommendation suggests.
  SuggestionCategory category = 1;

  // An id to uniquely identify the type of suggestion made.
  string id = 7;

  // Title of this suggestion.
  string title = 2;

  // Recommendation for improving the invocation.
  string recommendation = 3;

  // Rationale explaining why the recommendation is being made.
  repeated string rationale = 4;

  // Potential performance improvement upon implementing the recommendation.
  PotentialImprovement potential_improvement = 5;

  // Hints, suggestions, comments, or disclaimers about the analysis performed.
  repeated Caveat caveat = 6;
}

enum SuggestionCategory {
  UNKNOWN = 0;
  BAZEL_FLAGS = 1;
  BUILD_FILE = 2;
  RULES = 3;
  WORKSPACE = 4;
  SOURCE_CODE = 5;
  OTHER = 6;
}

// The output of a SuggestionProvider including suggestions, recommended
// additional inputs, and information if an error occurred during analysis.
// Next id: 6.
message SuggestionOutput {
  message Failure {
    string message = 1;
    string stack_trace = 2;
  }

  // Classname of the SuggestionProvider associated with the suggestions or
  // failures.
  string analyzer_classname = 1;

  // Suggestions generated by a SuggestionProvider.
  repeated Suggestion suggestion = 2;

  // Hints, suggestions, comments, or disclaimers about the analysis performed
  // that may help in interpreting why the analysis made (or did not make)
  // suggestions.
  repeated Caveat caveat = 3;

  // Inputs which could have been used to improve suggestions but which were
  // not available for use in the analysis.
  //
  // Note that a SuggestionProvider may be able to perform some analysis based
  // on the inputs that are available even if some are missing, and some
  // suggestions can be returned along with missingInputs; they are not
  // mutually exclusive.
  repeated string missing_input = 4;

  // Information about an unexpected catastrophic failure, if it occurred
  // during analysis.
  Failure failure = 5;
}
